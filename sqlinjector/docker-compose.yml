# SQLInjector Docker Compose Configuration

version: '3.8'

services:
  # Main SQLInjector service
  sqlinjector:
    build:
      context: .
      dockerfile: Dockerfile
    image: sqlinjector:latest
    container_name: sqlinjector-main
    volumes:
      - ./results:/app/results
      - ./sessions:/app/sessions
      - ./configs:/app/configs
    environment:
      - SQLINJECTOR_SAFE_MODE=true
      - SQLINJECTOR_LOG_LEVEL=INFO
    networks:
      - sqlinjector-net
    depends_on:
      - target-app
    command: ["--help"]

  # Test target application (vulnerable web app for testing)
  target-app:
    image: vulnerables/web-dvwa:latest
    container_name: dvwa-target
    ports:
      - "8080:80"
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=dvwa
      - MYSQL_USER=dvwa
      - MYSQL_PASSWORD=password
    networks:
      - sqlinjector-net

  # MySQL database for target app
  target-db:
    image: mysql:8.0
    container_name: dvwa-db
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=dvwa
      - MYSQL_USER=dvwa
      - MYSQL_PASSWORD=password
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - sqlinjector-net

  # Burp Suite Community (for proxy testing)
  burp-proxy:
    image: raesene/burp-community
    container_name: burp-proxy
    ports:
      - "8080:8080"
    environment:
      - DISPLAY=:1
    networks:
      - sqlinjector-net
    profiles:
      - proxy

  # Web server for serving reports
  report-server:
    image: nginx:alpine
    container_name: sqlinjector-reports
    ports:
      - "8090:80"
    volumes:
      - ./results:/usr/share/nginx/html:ro
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - sqlinjector-net
    profiles:
      - reports

networks:
  sqlinjector-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mysql_data: